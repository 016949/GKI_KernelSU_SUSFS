name: Create GitHub Release and Upload Artifacts

on:
  workflow_call:

jobs:
  create-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Collect artifacts (zip, img)
        run: |
          # Collect all zip and img files
          FILES=($(find ./ -type f \( -name "*.zip" -o -name "*.img" \)))
          echo "FILES=${FILES[@]}" >> $GITHUB_ENV

      - name: Extract zip files
        run: |
          # Unzip all collected zip files
          for zip_file in "${FILES[@]}"; do
            if [[ $zip_file == *.zip ]]; then
              echo "Extracting $zip_file"
              unzip "$zip_file" -d "$(dirname "$zip_file")"
            fi
          done

      - name: Remove zip files after extraction
        run: |
          # Remove the original zip files after extraction
          for zip_file in "${FILES[@]}"; do
            if [[ $zip_file == *.zip ]]; then
              echo "Removing $zip_file"
              rm -f "$zip_file"
            fi
          done

      - name: Collect extracted zip and img files
        run: |
          # Collect zip and img files after extraction and removal of zip files
          FILES=($(find ./ -type f \( -name "*.zip" -o -name "*.img" \)))
          echo "FILES=${FILES[@]}" >> $GITHUB_ENV

      - name: Get Latest Tag from GitHub
        id: get_tag
        run: |
          REPO_OWNER="TheWildJames"
          REPO_NAME="GKI_KernelSU_SUSFS"
          LATEST_TAG=$(gh api repos/$REPO_OWNER/$REPO_NAME/tags --jq '.[0].name')
          if [ -z "$LATEST_TAG" ]; then
            LATEST_TAG="1.5.3-0"
          fi
          # Increment the suffix after the dash
          NEW_TAG=$(echo "$LATEST_TAG" | awk -F- '{suffix=$2; if (!suffix) suffix=0; suffix++; printf "%s-%d", $1, suffix}')
          echo "TAG_NAME=${NEW_TAG}" >> $GITHUB_ENV

      - name: Define Release Name and Notes
        run: |
          # Define release name and notes
          RELEASE_NAME="*TEST BUILD* GKI Kernels With KernelSU & SUSFS v1.5.3 *TEST BUILD*"
          RELEASE_NOTES="This release contains KernelSU and SUSFS v1.5.3..."

          echo "RELEASE_NAME=$RELEASE_NAME" >> $GITHUB_ENV
          echo "RELEASE_NOTES=$RELEASE_NOTES" >> $GITHUB_ENV

      - name: Create GitHub Release
        run: |
          # Create the GitHub release
          gh release create "$TAG_NAME" "${FILES[@]}" \
            --repo "$REPO_OWNER/$REPO_NAME" \
            --title "$RELEASE_NAME" \
            --notes "$RELEASE_NOTES" \
            --prerelease \
            --latest=false

      - name: Display Files Uploaded
        run: |
          echo "GitHub release created with the following files:"
          printf '%s\n' "${FILES[@]}"
