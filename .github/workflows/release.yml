name: Trigger Release on Workflow Completion

on:
  workflow_run:
    workflows:
      - build-kernel-a12.yml
      - build-kernel-a13.yml
      - build-kernel-a14.yml
    types:
      - completed
  workflow_dispatch:
    inputs:
      make_release:
        description: 'Do you want to create a release?'
        required: true
        type: boolean
        default: true
      build_a12:
        description: 'Include A12 Kernel Artifacts?'
        required: true
        type: boolean
        default: true
      build_a13:
        description: 'Include A13 Kernel Artifacts?'
        required: true
        type: boolean
        default: true
      build_a14:
        description: 'Include A14 Kernel Artifacts?'
        required: true
        type: boolean
        default: true

jobs:
  trigger-release:
    runs-on: ubuntu-latest
    env:
      REPO_OWNER: TheWildJames
      REPO_NAME: GKI_KernelSU_SUSFS
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      RELEASE_NAME: "*TEST BUILD* GKI Kernels With KernelSU & SUSFS v1.5.3 *TEST BUILD*"
      RELEASE_NOTES: |
        This release contains KernelSU and SUSFS v1.5.3

        Module: 
        -> https://github.com/sidex15/ksu_module_susfs

        Official Manager:
        -> https://github.com/tiann/KernelSU
        Non-Official Managers:
        -> https://github.com/rifsxd/KernelSU-Next
        -> https://github.com/backslashxx/KernelSU
        -> https://github.com/rsuntk/KernelSU
        -> https://github.com/5ec1cff/KernelSU
        -> https://github.com/silvzr/KernelSU
        -> https://github.com/sidex15/KernelSU

        Features:
        [+] KernelSU-Next
        [+] SUSFS v1.5.3
        [+] Wireguard Support
        [+] Maphide LineageOS Detections
        [+] Futile Maphide for jit-zygote-cache Detections
        [+] Magic Mount Support

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Verify gh Authentication
        run: gh auth status

      - name: Get Latest Tag from GitHub
        id: get_tag
        run: |
          LATEST_TAG=$(gh api repos/$REPO_OWNER/$REPO_NAME/tags --jq '.[0].name')
          if [ -z "$LATEST_TAG" ]; then
            LATEST_TAG="1.5.3-0"
          fi
          # Increment the suffix after the dash (if needed)
          NEW_TAG=$(echo "$LATEST_TAG" | awk -F- '{suffix=$2; if (!suffix) suffix=0; suffix++; printf "%s-%d", $1, suffix}')
          echo "TAG_NAME=${NEW_TAG}" >> $GITHUB_ENV

      - name: Download artifacts for A12
        if: ${{ github.event.inputs.build_a12 == 'true' || github.event.inputs.build_a12 == '' }}
        uses: actions/download-artifact@v3
        with:
          name: kernel-artifacts-a12
          path: ./downloaded-artifacts

      - name: Download artifacts for A13
        if: ${{ github.event.inputs.build_a13 == 'true' || github.event.inputs.build_a13 == '' }}
        uses: actions/download-artifact@v3
        with:
          name: kernel-artifacts-a13
          path: ./downloaded-artifacts

      - name: Download artifacts for A14
        if: ${{ github.event.inputs.build_a14 == 'true' || github.event.inputs.build_a14 == '' }}
        uses: actions/download-artifact@v3
        with:
          name: kernel-artifacts-a14
          path: ./downloaded-artifacts

      - name: Create GitHub Release
        run: |
          # Create the GitHub release
          gh release create "$TAG_NAME" ./downloaded-artifacts/* \
            --repo "$REPO_OWNER/$REPO_NAME" \
            --title "$RELEASE_NAME" \
            --notes "$RELEASE_NOTES" \
            --prerelease \
            --latest=false

      - name: Display Files Uploaded
        run: |
          echo "GitHub release created with the following files:"
          ls ./downloaded-artifacts
