name: Prerequisites

on:
  workflow_call:  # Makes this workflow callable by other workflows

jobs:
  setup-prerequisites:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Cache prebuilt toolchains
      - name: Restore prebuilt toolchains from cache
        uses: actions/cache@v3
        with:
          path: |
            build-tools
            kernel-build-tools
            mkbootimg
          key: toolchains-${{ runner.os }}-${{ github.ref_name }}

      # Step 2: Download prebuilt toolchains (if not cached)
      - name: Download prebuilt toolchain
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          AOSP_MIRROR=https://android.googlesource.com
          BRANCH=main-kernel-build-2024
          
          git clone $AOSP_MIRROR/platform/prebuilts/build-tools -b $BRANCH --depth 1 build-tools
          git clone $AOSP_MIRROR/kernel/prebuilts/build-tools -b $BRANCH --depth 1 kernel-build-tools
          git clone $AOSP_MIRROR/platform/system/tools/mkbootimg -b $BRANCH --depth 1 mkbootimg

      # Step 3: Save to cache
      - name: Save toolchains to cache
        if: steps.cache.outputs.cache-hit != 'true'
        uses: actions/cache@v3
        with:
          path: |
            build-tools
            kernel-build-tools
            mkbootimg
          key: toolchains-${{ runner.os }}-${{ github.ref_name }}

      # Step 4: Export environment variables
      - name: Export environment variables
        run: |
          echo "AVBTOOL=$GITHUB_WORKSPACE/kernel-build-tools/linux-x86/bin/avbtool" >> $GITHUB_ENV
          echo "GZIP=$GITHUB_WORKSPACE/build-tools/path/linux-x86/gzip" >> $GITHUB_ENV
          echo "LZ4=$GITHUB_WORKSPACE/build-tools/path/linux-x86/lz4" >> $GITHUB_ENV
          echo "MKBOOTIMG=$GITHUB_WORKSPACE/mkbootimg/mkbootimg.py" >> $GITHUB_ENV
          echo "UNPACK_BOOTIMG=$GITHUB_WORKSPACE/mkbootimg/unpack_bootimg.py" >> $GITHUB_ENV
