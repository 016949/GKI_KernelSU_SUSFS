name: Download Prebuilt Toolchain and Repo

on:
  workflow_call:  # Makes this workflow callable by other workflows

jobs:
  setup-prerequisites:
    runs-on: ubuntu-latest

    steps:
      # Step 0: Maximize build space
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 8192
          temp-reserve-mb: 2048
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'

      # Step 1: Cache dependencies to avoid re-downloading
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ${{ github.workspace }}/build-tools
            ${{ github.workspace }}/kernel-build-tools
            ${{ github.workspace }}/mkbootimg
          key: ${{ runner.os }}-kernel-tools-${{ hashFiles('../prerequisites.yml') }}
          restore-keys: |
            ${{ runner.os }}-kernel-tools-

      # Step 2: Download prebuilt toolchain
      - name: Download prebuilt toolchain
        run: |
          AOSP_MIRROR=https://android.googlesource.com
          BRANCH=main-kernel-build-2024
          
          # Clone necessary prebuilt tools
          git clone $AOSP_MIRROR/platform/prebuilts/build-tools -b $BRANCH --depth 1 build-tools
          git clone $AOSP_MIRROR/kernel/prebuilts/build-tools -b $BRANCH --depth 1 kernel-build-tools
          git clone $AOSP_MIRROR/platform/system/tools/mkbootimg -b $BRANCH --depth 1 mkbootimg

          # Export paths to required tools as environment variables
          echo "AVBTOOL=$GITHUB_WORKSPACE/kernel-build-tools/linux-x86/bin/avbtool" >> $GITHUB_ENV
          echo "GZIP=$GITHUB_WORKSPACE/build-tools/path/linux-x86/gzip" >> $GITHUB_ENV
          echo "LZ4=$GITHUB_WORKSPACE/build-tools/path/linux-x86/lz4" >> $GITHUB_ENV
          echo "MKBOOTIMG=$GITHUB_WORKSPACE/mkbootimg/mkbootimg.py" >> $GITHUB_ENV
          echo "UNPACK_BOOTIMG=$GITHUB_WORKSPACE/mkbootimg/unpack_bootimg.py" >> $GITHUB_ENV

      # Step 3: Set boot sign key
      - name: Set boot sign key
        env:
          BOOT_SIGN_KEY: ${{ secrets.BOOT_SIGN_KEY }}
        run: |
          if [ ! -z "$BOOT_SIGN_KEY" ]; then
            echo "$BOOT_SIGN_KEY" > ./kernel-build-tools/linux-x86/share/avb/testkey_rsa2048.pem
          fi

      # Step 4: Install repo tool via apt
      - name: Install repo tool via apt
        run: |
          sudo apt-get update
          sudo apt-get install -y repo
          
      # Step 5: Set environment variable for 'repo'
      - name: Set repo path environment variable
        run: |
          echo "REPO=/usr/bin/repo" >> $GITHUB_ENV
