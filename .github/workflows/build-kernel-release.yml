name: Build and Release GKI Kernels

on:
  workflow_dispatch:
    inputs:
      make_release:
        description: 'Do you want to create a release?'
        required: true
        type: boolean
        default: false
      build_a12:
        description: 'Build Android 12 kernel?'
        required: true
        type: boolean
        default: false
      build_a13:
        description: 'Build Android 13 kernel?'
        required: true
        type: boolean
        default: false
      build_a14:
        description: 'Build Android 14 kernel?'
        required: true
        type: boolean
        default: false

jobs:
  build-kernel-a12:
    uses: ./.github/workflows/build-kernel-a12.yml
    secrets: inherit
    if: ${{ github.event.inputs.build_a12 == 'true' || github.event.inputs.build_a12 == '' }}

  build-kernel-a13:
    uses: ./.github/workflows/build-kernel-a13.yml
    secrets: inherit
    if: ${{ github.event.inputs.build_a13 == 'true' || github.event.inputs.build_a13 == '' }}

  build-kernel-a14:
    uses: ./.github/workflows/build-kernel-a14.yml
    secrets: inherit
    if: ${{ github.event.inputs.build_a14 == 'true' || github.event.inputs.build_a14 == '' }}

  trigger-release:
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.make_release == 'true' }}
    needs:
      - build-kernel-a12
      - build-kernel-a13
      - build-kernel-a14  # Ensure the release happens after the build jobs
    env:
      REPO_OWNER: TheWildJames
      REPO_NAME: GKI_KernelSU_SUSFS
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      RELEASE_NAME: "*TEST BUILD* GKI Kernels With KernelSU & SUSFS v1.5.3 *TEST BUILD*"
      RELEASE_NOTES: |
        This release contains KernelSU and SUSFS v1.5.3
        Module: 
        -> https://github.com/sidex15/ksu_module_susfs
        Official Manager:
        -> https://github.com/tiann/KernelSU
        Non-Official Managers:
        -> https://github.com/rifsxd/KernelSU-Next
        -> https://github.com/backslashxx/KernelSU
        -> https://github.com/rsuntk/KernelSU
        -> https://github.com/5ec1cff/KernelSU
        -> https://github.com/silvzr/KernelSU
        -> https://github.com/sidex15/KernelSU
        Features:
        [+] KernelSU-Next
        [+] SUSFS v1.5.3
        [+] Wireguard Support
        [+] Maphide LineageOS Detections
        [+] Futile Maphide for jit-zygote-cache Detections
        [+] Magic Mount Support

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Verify GitHub CLI Authentication
      - name: Verify gh Authentication
        run: gh auth status

      # Get the Latest Tag from GitHub
      - name: Get Latest Tag from GitHub
        id: get_tag
        run: |
          LATEST_TAG=$(gh api repos/$REPO_OWNER/$REPO_NAME/tags --jq '.[0].name')
          if [ -z "$LATEST_TAG" ]; then
            LATEST_TAG="1.5.3-0"
          fi
          NEW_TAG=$(echo "$LATEST_TAG" | awk -F- '{suffix=$2; if (!suffix) suffix=0; suffix++; printf "%s-%d", $1, suffix}')
          echo "TAG_NAME=${NEW_TAG}" >> $GITHUB_ENV

      # Create the downloaded-artifacts directory
      - name: Create download artifacts directory
        run: mkdir -p ./downloaded-artifacts

      # Create placeholder files for the kernels
      - name: Create Placeholder Files
        run: |
          if [ "${{ github.event.inputs.build_a12 }}" == "true" ]; then
            echo "This is a placeholder for A12 kernel" > ./downloaded-artifacts/placeholder_a12.txt
          fi
          if [ "${{ github.event.inputs.build_a13 }}" == "true" ]; then
            echo "This is a placeholder for A13 kernel" > ./downloaded-artifacts/placeholder_a13.txt
          fi
          if [ "${{ github.event.inputs.build_a14 }}" == "true" ]; then
            echo "This is a placeholder for A14 kernel" > ./downloaded-artifacts/placeholder_a14.txt
          fi

      # Create GitHub Release and upload files if make_release is true
      - name: Create GitHub Release
        if: ${{ github.event.inputs.make_release == 'true' }}
        uses: softprops/action-gh-release@v1
        with:
          files: ./downloaded-artifacts/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG_NAME: ${{ env.TAG_NAME }}
          RELEASE_NAME: ${{ env.RELEASE_NAME }}
          RELEASE_NOTES: ${{ env.RELEASE_NOTES }}

      # Display Files Uploaded
      - name: Display Files Uploaded
        run: |
          echo "GitHub release created with the following files:"
          ls ./downloaded-artifacts
