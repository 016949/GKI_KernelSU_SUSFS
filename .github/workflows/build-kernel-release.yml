name: Build and Release GKI Kernels

on:
  workflow_dispatch:
    inputs:
      make_release:
        description: 'Do you want to create a release?'
        required: true
        type: boolean
        default: false
      build_a12:
        description: 'Build Android 12 kernel?'
        required: true
        type: boolean
        default: false
      build_a13:
        description: 'Build Android 13 kernel?'
        required: true
        type: boolean
        default: false
      build_a14:
        description: 'Build Android 14 kernel?'
        required: true
        type: boolean
        default: false
  push:
    branches:
      - main

jobs:
  build-kernel-a12:
    if: ${{ github.event.inputs.build_a12 == 'true' || github.event.inputs.build_a12 == '' }}
    uses: ./.github/workflows/build-kernel-a12.yml
    secrets: inherit

  build-kernel-a13:
    if: ${{ github.event.inputs.build_a13 == 'true' || github.event.inputs.build_a13 == '' }}
    uses: ./.github/workflows/build-kernel-a13.yml
    secrets: inherit

  build-kernel-a14:
    if: ${{ github.event.inputs.build_a14 == 'true' || github.event.inputs.build_a14 == '' }}
    uses: ./.github/workflows/build-kernel-a14.yml
    secrets: inherit

  trigger-release:
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.make_release == 'true' }}  # Run only if 'make_release' is true
    needs:
      - build-kernel-a12
      - build-kernel-a13
      - build-kernel-a14
    env:
      REPO_OWNER: TheWildJames
      REPO_NAME: GKI_KernelSU_SUSFS
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      RELEASE_NAME: "*TEST BUILD* GKI Kernels With KernelSU & SUSFS v1.5.3 *TEST BUILD*"
      RELEASE_NOTES: |
        This release contains KernelSU and SUSFS v1.5.3
        Module: 
        -> https://github.com/sidex15/ksu_module_susfs
        Official Manager:
        -> https://github.com/tiann/KernelSU
        Non-Official Managers:
        -> https://github.com/rifsxd/KernelSU-Next
        -> https://github.com/backslashxx/KernelSU
        -> https://github.com/rsuntk/KernelSU
        -> https://github.com/5ec1cff/KernelSU
        -> https://github.com/silvzr/KernelSU
        -> https://github.com/sidex15/KernelSU
        Features:
        [+] KernelSU-Next
        [+] SUSFS v1.5.3
        [+] Wireguard Support
        [+] Maphide LineageOS Detections
        [+] Futile Maphide for jit-zygote-cache Detections
        [+] Magic Mount Support

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Verify GitHub CLI Authentication
      - name: Verify gh Authentication
        run: gh auth status

      # Get the Latest Tag from GitHub
      - name: Get Latest Tag from GitHub
        id: get_tag
        run: |
          LATEST_TAG=$(gh api repos/$REPO_OWNER/$REPO_NAME/tags --jq '.[0].name')
          if [ -z "$LATEST_TAG" ]; then
            LATEST_TAG="1.5.3-0"
          fi
          NEW_TAG=$(echo "$LATEST_TAG" | awk -F- '{suffix=$2; if (!suffix) suffix=0; suffix++; printf "%s-%d", $1, suffix}')
          echo "TAG_NAME=${NEW_TAG}" >> $GITHUB_ENV

      # Check Build Results and Add Placeholders if No Build
      - name: Check Build Status and Download Artifacts or Add Placeholders
        run: |
          if [[ "${{ needs.build-kernel-a12.result }}" == "success" || "${{ needs.build-kernel-a12.result }}" == "skipped" ||
                "${{ needs.build-kernel-a13.result }}" == "success" || "${{ needs.build-kernel-a13.result }}" == "skipped" ||
                "${{ needs.build-kernel-a14.result }}" == "success" || "${{ needs.build-kernel-a14.result }}" == "skipped" ]]; then
            echo "At least one build succeeded or was skipped."
          else
            echo "No builds triggered or completed. Adding placeholder files."
            echo "This is a placeholder for A12 kernel" > ./downloaded-artifacts/placeholder_a12.txt
            echo "This is a placeholder for A13 kernel" > ./downloaded-artifacts/placeholder_a13.txt
            echo "This is a placeholder for A14 kernel" > ./downloaded-artifacts/placeholder_a14.txt
          fi

      # Download Artifacts for A12 (Only if Build Succeeded or Skipped)
      - name: Download Artifacts for A12 (Only if A12 Build is successful or skipped)
        if: ${{ needs.build-kernel-a12.result == 'success' || needs.build-kernel-a12.result == 'skipped' }}
        uses: actions/download-artifact@v3
        with:
          name: kernel-artifacts-a12
          path: ./downloaded-artifacts

      # Download Artifacts for A13 (Only if Build Succeeded or Skipped)
      - name: Download Artifacts for A13 (Only if A13 Build is successful or skipped)
        if: ${{ needs.build-kernel-a13.result == 'success' || needs.build-kernel-a13.result == 'skipped' }}
        uses: actions/download-artifact@v3
        with:
          name: kernel-artifacts-a13
          path: ./downloaded-artifacts

      # Download Artifacts for A14 (Only if Build Succeeded or Skipped)
      - name: Download Artifacts for A14 (Only if Build Succeeded or Skipped)
        if: ${{ needs.build-kernel-a14.result == 'success' || needs.build-kernel-a14.result == 'skipped' }}
        uses: actions/download-artifact@v3
        with:
          name: kernel-artifacts-a14
          path: ./downloaded-artifacts

      # Create GitHub Release
      - name: Create GitHub Release
        run: |
          gh release create "$TAG_NAME" ./downloaded-artifacts/* \
            --repo "$REPO_OWNER/$REPO_NAME" \
            --title "$RELEASE_NAME" \
            --notes "$RELEASE_NOTES" \
            --prerelease \
            --latest=false

      # Display Files Uploaded
      - name: Display Files Uploaded
        run: |
          echo "GitHub release created with the following files:"
          ls ./downloaded-artifacts
